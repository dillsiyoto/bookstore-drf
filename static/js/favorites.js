document.addEventListener("DOMContentLoaded", async () => {
    const container = document.getElementById("favorites-list");
    if (!container) return;

    const favorites = JSON.parse(localStorage.getItem("favorites") || "[]");
    if (favorites.length === 0) {
        container.innerHTML = "<p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∫–Ω–∏–≥ ‚ù§Ô∏è</p>";
        return;
    }

    try {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –∫–Ω–∏–≥–∏ –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ
        const res = await fetch("/api/books/");
        const data = await res.json();
        const books = Array.isArray(data) ? data : data.results || [];

        const favBooks = books.filter(b => favorites.includes(b.id));

        if (favBooks.length === 0) {
            container.innerHTML = "<p>–ò–∑–±—Ä–∞–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã üò¢</p>";
            return;
        }

        favBooks.forEach(book => {
            const card = document.createElement("div");
            card.className = "book-card";
            card.innerHTML = `
                <div class="cover">
                    <img src="${book.cover_image || '/static/img/default-cover.png'}" alt="${book.title}">
                </div>
                <h3>${book.title}</h3>
                <p><strong>–ê–≤—Ç–æ—Ä:</strong> ${book.author || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
                <p class="price">${book.price ? book.price + " ‚Ç∏" : ""}</p>
                <button class="remove-fav">–£–¥–∞–ª–∏—Ç—å</button>
            `;

            card.querySelector(".remove-fav").addEventListener("click", (e) => {
                e.stopPropagation();
                removeFromFavorites(book.id);
                card.remove();
                if (container.children.length === 0) {
                    container.innerHTML = "<p>–ò–∑–±—Ä–∞–Ω–Ω—ã—Ö –∫–Ω–∏–≥ –±–æ–ª—å—à–µ –Ω–µ—Ç.</p>";
                }
            });

            card.addEventListener("click", () => {
                window.location.href = `/book/${book.id}/`;
            });

            container.appendChild(card);
        });

    } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö:", err);
        container.innerHTML = "<p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö.</p>";
    }
});

function removeFromFavorites(bookId) {
    let favorites = JSON.parse(localStorage.getItem("favorites") || "[]");
    favorites = favorites.filter(id => id !== bookId);
    localStorage.setItem("favorites", JSON.stringify(favorites));
}
